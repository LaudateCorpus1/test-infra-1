{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": 6,
  "links": [],
  "panels": [
    {
      "collapsed": false,
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 42,
      "panels": [],
      "title": "Top Level CI Health",
      "type": "row"
    },
    {
      "datasource": "GitHub",
      "description": "Failures on CircleCI runs on the master branch",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "bars",
            "fillOpacity": 100,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "stepAfter",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "line"
            }
          },
          "links": [],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "green",
                "value": 5
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "fail_percent"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 1
      },
      "id": 32,
      "links": [
        {
          "targetBlank": true,
          "title": "See Individual Jobs",
          "url": "https://metrics.pytorch.org/explore?orgId=1&left=%5B%22now-24h%22,%22now%22,%22GitHub%22,%7B%22datasource%22:%22GitHub%22,%22format%22:%22time_series%22,%22timeColumn%22:%22sync_last_update_at%22,%22metricColumn%22:%22none%22,%22group%22:%5B%5D,%22where%22:%5B%7B%22type%22:%22macro%22,%22name%22:%22$__timeFilter%22,%22params%22:%5B%5D%7D%5D,%22select%22:%5B%5B%7B%22type%22:%22column%22,%22params%22:%5B%22pk_id%22%5D%7D%5D%5D,%22rawQuery%22:true,%22rawSql%22:%22SELECT%20context%20as%20%5C%22metric%5C%22,%5Cn%20%20%20%20%20%20%20state,%5Cn%20%20%20%20%20%20%20updated_at%20as%20%5C%22time%5C%22,%5Cn%20%20%20%20%20%20%20target_url%5CnFROM%20status_event%5CnWHERE%20state%20!%3D%20%5C%22pending%5C%22%5Cn%20%20AND%20state%20!%3D%20%5C%22success%5C%22%5Cn%20%20AND%20$__timeFilter(updated_at)%5Cn%20%20AND%20json_unquote(json_extract(branches,%20%5C%22$%5B0%5D.name%5C%22))%20%3D%20%5C%22master%5C%22%22,%22table%22:%22pull_request_review_event%22,%22timeColumnType%22:%22timestamp%22%7D,%7B%22datasource%22:%22GitHub%22,%22format%22:%22time_series%22,%22timeColumn%22:%22sync_last_update_at%22,%22metricColumn%22:%22none%22,%22group%22:%5B%5D,%22where%22:%5B%7B%22type%22:%22macro%22,%22name%22:%22$__timeFilter%22,%22params%22:%5B%5D%7D%5D,%22select%22:%5B%5B%7B%22type%22:%22column%22,%22params%22:%5B%22pk_id%22%5D%7D%5D%5D,%22rawQuery%22:true,%22rawSql%22:%22SELECT%20time,%5Cn%20%20%20%20%20%20%20failing_jobs%20%2F%20(failing_jobs%20%2B%20passing_jobs)%20*%20100%20as%20%5C%22fail_percent%5C%22%5CnFROM%5Cn%20%20(SELECT%20$__timeGroupAlias(updated_at,%2030m),%5Cn%20%20%20%20%20%20%20%20%20%20sum(CASE%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20WHEN%20state%20!%3D%20%5C%22success%5C%22%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20AND%20state%20!%3D%20%5C%22pending%5C%22%20THEN%201%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20ELSE%200%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20END)%20AS%20failing_jobs,%5Cn%20%20%20%20%20%20%20%20%20%20sum(CASE%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20WHEN%20state%20%3D%20%5C%22success%5C%22%20THEN%201%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20ELSE%200%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20END)%20AS%20passing_jobs%5Cn%20%20%20FROM%20status_event%5Cn%20%20%20WHERE%20$__timeFilter(updated_at)%5Cn%20%20%20%20%20AND%20json_unquote(json_extract(branches,%20%5C%22$%5B0%5D.name%5C%22))%20%3D%20%5C%22master%5C%22%5Cn%20%20%20GROUP%20BY%201%5Cn%20%20%20ORDER%20BY%20$__timeGroup(updated_at,%2030m))%20AS%20nested%22,%22table%22:%22pull_request_review_event%22,%22timeColumnType%22:%22timestamp%22%7D%5D"
        }
      ],
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "queryType": "randomWalk",
          "rawQuery": true,
          "rawSql": "SELECT time,\n       failing_jobs / (failing_jobs + passing_jobs) * 100 as \"fail_percent\"\nFROM\n  (SELECT $__timeGroupAlias(updated_at, 30m),\n          sum(CASE\n                  WHEN state != \"success\"\n                       AND state != \"pending\" THEN 1\n                  ELSE 0\n              END) AS failing_jobs,\n          sum(CASE\n                  WHEN state = \"success\" THEN 1\n                  ELSE 0\n              END) AS passing_jobs\n   FROM status_event\n   WHERE $__timeFilter(updated_at)\n     AND json_unquote(json_extract(branches, \"$[0].name\")) = \"master\"\n   GROUP BY 1\n   ORDER BY $__timeGroup(updated_at, 30m)) AS nested",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "pk_id"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "pull_request_review_event",
          "timeColumn": "sync_last_update_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "title": "CircleCI/Jenkins Master Fail %",
      "transformations": [],
      "type": "timeseries"
    },
    {
      "datasource": "GitHub",
      "description": "Failures on GHA runs on the master branch",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "bars",
            "fillOpacity": 100,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "stepAfter",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "line"
            }
          },
          "links": [],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "green",
                "value": 5
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Fail Percent"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 1
      },
      "id": 33,
      "links": [
        {
          "targetBlank": true,
          "title": "See Individual Workflow Jobs",
          "url": "https://metrics.pytorch.org/explore?orgId=1&left=%5B%22now-24h%22,%22now%22,%22GitHub%22,%7B%22datasource%22:%22GitHub%22,%22format%22:%22table%22,%22timeColumn%22:%22sync_last_update_at%22,%22metricColumn%22:%22none%22,%22group%22:%5B%5D,%22where%22:%5B%7B%22type%22:%22macro%22,%22name%22:%22$__timeFilter%22,%22params%22:%5B%5D%7D%5D,%22select%22:%5B%5B%7B%22type%22:%22column%22,%22params%22:%5B%22pk_id%22%5D%7D%5D%5D,%22rawQuery%22:true,%22rawSql%22:%22SELECT%20concat(%5C%22https:%2F%2Fgithub.com%2Fpytorch%2Fpytorch%2Fruns%2F%5C%22,%20workflow_job.id)%20AS%20%5C%22url%5C%22,%5Cn%20%20%20%20%20%20%20workflow_run.name%20as%20%5C%22workflow%5C%22,%5Cn%20%20%20%20%20%20%20workflow_job.name,%5Cn%20%20%20%20%20%20%20workflow_job.completed_at,%5Cn%20%20%20%20%20%20%20workflow_job.status,%5Cn%20%20%20%20%20%20%20workflow_job.conclusion,%5Cn%20%20%20%20%20%20%20workflow_job.head_sha,%5Cn%20%20%20%20%20%20%20workflow_run.head_commit_message%5CnFROM%20workflow_job%5CnINNER%20JOIN%20workflow_run%20ON%20workflow_job.run_id%20%3D%20workflow_run.id%5CnWHERE%20workflow_run.head_branch%20%3D%20%5C%22master%5C%22%5Cn%20%20AND%20$__timeFilter(workflow_job.completed_at)%5Cn%20%20AND%20workflow_job.conclusion%20!%3D%20%5C%22success%5C%22%5Cn%20%20AND%20workflow_job.conclusion%20!%3D%20%5C%22skipped%5C%22%5Cn%20%20AND%20workflow_job.conclusion%20!%3D%20%5C%22cancelled%5C%22%5CnOrder%20by%20workflow_job.completed_at%20desc;%22,%22table%22:%22pull_request_review_event%22,%22timeColumnType%22:%22timestamp%22%7D,%7B%22datasource%22:%22GitHub%22,%22format%22:%22time_series%22,%22timeColumn%22:%22sync_last_update_at%22,%22metricColumn%22:%22none%22,%22group%22:%5B%5D,%22where%22:%5B%7B%22type%22:%22macro%22,%22name%22:%22$__timeFilter%22,%22params%22:%5B%5D%7D%5D,%22select%22:%5B%5B%7B%22type%22:%22column%22,%22params%22:%5B%22pk_id%22%5D%7D%5D%5D,%22rawQuery%22:true,%22rawSql%22:%22SELECT%20time,%5Cn%20%20%20%20%20%20%20failing_jobs%20%2F%20(failing_jobs%20%2B%20passing_jobs)%20*%20100%20as%20%5C%22Fail%20Percent%5C%22%5CnFROM%5Cn%20%20(SELECT%20$__timeGroupAlias(workflow_job.completed_at,%2030m),%5Cn%20%20%20%20%20%20%20%20%20%20sum(CASE%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20WHEN%20workflow_job.conclusion%20!%3D%20%5C%22success%5C%22%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20AND%20workflow_job.conclusion%20!%3D%20%5C%22skipped%5C%22%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20AND%20workflow_job.conclusion%20!%3D%20%5C%22cancelled%5C%22%20THEN%201%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20ELSE%200%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20END)%20AS%20failing_jobs,%5Cn%20%20%20%20%20%20%20%20%20%20sum(CASE%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20WHEN%20workflow_job.conclusion%20%3D%20%5C%22success%5C%22%20THEN%201%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20ELSE%200%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20END)%20AS%20passing_jobs%5Cn%20%20%20FROM%20workflow_job%5Cn%20%20%20INNER%20JOIN%20workflow_run%20ON%20workflow_job.run_id%20%3D%20workflow_run.id%5Cn%20%20%20WHERE%20workflow_run.head_branch%20%3D%20%5C%22master%5C%22%5Cn%20%20%20%20%20AND%20$__timeFilter(workflow_job.completed_at)%5Cn%20%20%20GROUP%20BY%201%5Cn%20%20%20ORDER%20BY%20$__timeGroup(completed_at,%2030m))%20AS%20nested%22,%22table%22:%22pull_request_review_event%22,%22timeColumnType%22:%22timestamp%22%7D%5D"
        }
      ],
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "queryType": "randomWalk",
          "rawQuery": true,
          "rawSql": "SELECT time,\n       failing_jobs / (failing_jobs + passing_jobs) * 100 as \"Fail Percent\"\nFROM\n  (SELECT $__timeGroupAlias(workflow_job.completed_at, 30m),\n          sum(CASE\n                  WHEN workflow_job.conclusion != \"success\"\n                       AND workflow_job.conclusion != \"skipped\"\n                       AND workflow_job.conclusion != \"cancelled\" THEN 1\n                  ELSE 0\n              END) AS failing_jobs,\n          sum(CASE\n                  WHEN workflow_job.conclusion = \"success\" THEN 1\n                  ELSE 0\n              END) AS passing_jobs\n   FROM workflow_job\n   INNER JOIN workflow_run ON workflow_job.run_id = workflow_run.id\n   WHERE workflow_run.head_branch = \"master\"\n     AND $__timeFilter(workflow_job.completed_at)\n   GROUP BY 1\n   ORDER BY $__timeGroup(completed_at, 30m)) AS nested",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "pk_id"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "pull_request_review_event",
          "timeColumn": "sync_last_update_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "title": "GitHub Actions Master Fail %",
      "transformations": [],
      "type": "timeseries"
    },
    {
      "datasource": "GitHub",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 12
              }
            ]
          },
          "unit": "h"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 0,
        "y": 9
      },
      "id": 11,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "first"
          ],
          "fields": "/^hours_since_push$/",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.1.1",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "queryType": "randomWalk",
          "rawQuery": true,
          "rawSql": "select\n  ref,\n  head_commit_message, (UNIX_TIMESTAMP(CURRENT_TIMESTAMP()) - 25200 - UNIX_TIMESTAMP(head_commit_timestamp)) / 60 / 60 as \"hours_since_push\"\nfrom push_event\nwhere ref='refs/heads/master'\norder by head_commit_timestamp desc \nlimit 1;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "output_annotations_count"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "check_run",
          "timeColumn": "started_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Last master update",
      "type": "stat"
    },
    {
      "datasource": "GitHub",
      "description": "Note: Bundled commits show up as a single revert",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 1
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 2,
        "x": 4,
        "y": 9
      },
      "id": 18,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "first"
          ],
          "fields": "/^num_reverts$/",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.1.1",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "queryType": "randomWalk",
          "rawQuery": true,
          "rawSql": "select count(*) as \"num_reverts\"\nfrom push_event\nwhere ref = 'refs/heads/master'\n    and head_commit_message like \"Revert D%\"\n    and $__timeFilter(sync_last_update_at);",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "output_annotations_count"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "check_run",
          "timeColumn": "started_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "# Reverts",
      "type": "stat"
    },
    {
      "datasource": "GitHub",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 12
              }
            ]
          },
          "unit": "h"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 2,
        "x": 6,
        "y": 9
      },
      "id": 12,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "first"
          ],
          "fields": "/^hours_since_push$/",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.1.1",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "queryType": "randomWalk",
          "rawQuery": true,
          "rawSql": "select\n  ref,\n  head_commit_message, (UNIX_TIMESTAMP(CURRENT_TIMESTAMP()) - 25200 - UNIX_TIMESTAMP(head_commit_timestamp)) / 60 / 60 as \"hours_since_push\"\nfrom push_event\nwhere ref='refs/heads/viable/strict' and (head_commit_added!=\"[]\" or head_commit_removed!=\"[]\" or head_commit_modified!=\"[]\")\norder by head_commit_timestamp desc \nlimit 1;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "output_annotations_count"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "check_run",
          "timeColumn": "started_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Last viable/strict update",
      "type": "stat"
    },
    {
      "datasource": "GitHub",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 24
              }
            ]
          },
          "unit": "h"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 8,
        "y": 9
      },
      "id": 16,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "first"
          ],
          "fields": "/^hours_since_push$/",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.1.1",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "queryType": "randomWalk",
          "rawQuery": true,
          "rawSql": "select\n  ref,\n  head_commit_message, (UNIX_TIMESTAMP(CURRENT_TIMESTAMP()) - 25200 - UNIX_TIMESTAMP(head_commit_timestamp)) / 60 / 60 as \"hours_since_push\"\nfrom push_event\nwhere ref='refs/heads/nightly' and (head_commit_added!=\"[]\" or head_commit_removed!=\"[]\" or head_commit_modified!=\"[]\")\norder by head_commit_timestamp desc \nlimit 1;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "output_annotations_count"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "check_run",
          "timeColumn": "started_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Last nightly update",
      "type": "stat"
    },
    {
      "datasource": "GitHub",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "bars",
            "fillOpacity": 100,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "stepAfter",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "line"
            }
          },
          "links": [],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "green",
                "value": 5
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "queue time (m)"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "continuous-BlYlRd",
                  "seriesBy": "last"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 9
      },
      "id": 35,
      "links": [
        {
          "targetBlank": true,
          "title": "See Individual Jobs",
          "url": "https://metrics.pytorch.org/explore?orgId=1&left=%5B%22now-24h%22,%22now%22,%22GitHub%22,%7B%22datasource%22:%22GitHub%22,%22format%22:%22table%22,%22timeColumn%22:%22sync_last_update_at%22,%22metricColumn%22:%22none%22,%22group%22:%5B%5D,%22where%22:%5B%7B%22type%22:%22macro%22,%22name%22:%22$__timeFilter%22,%22params%22:%5B%5D%7D%5D,%22select%22:%5B%5B%7B%22type%22:%22column%22,%22params%22:%5B%22pk_id%22%5D%7D%5D%5D,%22rawQuery%22:true,%22rawSql%22:%22SELECT%20CONCAT(CONCAT(workflow_run.name,%20%5C%22%20%2F%20%5C%22),%20workflow_job.name)%20as%20%5C%22name%5C%22,%5Cn%20%20%20%20%20%20%20(unix_timestamp(t2.sync_last_update_at)%20-%20unix_timestamp(t1.sync_last_update_at))%20%2F%2060%20%5C%22queue_time%20(m)%5C%22,%5Cn%20%20%20%20%20%20%20CONCAT(%5C%22https:%2F%2Fgithub.com%2Fpytorch%2Fpytorch%2Factions%2Fruns%2F%5C%22,%20workflow_run.id)%20as%20%5C%22url%5C%22%5CnFROM%5Cn%20%20(SELECT%20dense_rank()%20over(PARTITION%20BY%20BINARY%20workflow_job_node_id%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20ORDER%20BY%20sync_last_update_at)%20AS%20%5C%22rerun_num%5C%22,%5Cn%20%20%20%20%20%20%20%20%20%20action,%5Cn%20%20%20%20%20%20%20%20%20%20workflow_job_node_id,%5Cn%20%20%20%20%20%20%20%20%20%20sync_last_update_at%5Cn%20%20%20FROM%20workflow_job_event%5Cn%20%20%20WHERE%20action%20%3D%20%5C%22queued%5C%22%5Cn%20%20%20%20%20AND%20$__timeFilter(sync_last_update_at)%20)%20AS%20t1%5CnINNER%20JOIN%5Cn%20%20(SELECT%20dense_rank()%20over(PARTITION%20BY%20BINARY%20workflow_job_node_id%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20ORDER%20BY%20sync_last_update_at)%20AS%20%5C%22rerun_num%5C%22,%5Cn%20%20%20%20%20%20%20%20%20%20action,%5Cn%20%20%20%20%20%20%20%20%20%20workflow_job_node_id,%5Cn%20%20%20%20%20%20%20%20%20%20sync_last_update_at%5Cn%20%20%20FROM%20workflow_job_event%5Cn%20%20%20WHERE%20action%20%3D%20%5C%22in_progress%5C%22%5Cn%20%20%20%20%20AND%20$__timeFilter(sync_last_update_at)%20)%20AS%20t2%20ON%20t1.rerun_num%20%3D%20t2.rerun_num%5CnAND%20t1.workflow_job_node_id%20%3D%20t2.workflow_job_node_id%5CnAND%20t1.sync_last_update_at%20%3C%20t2.sync_last_update_at%5CnINNER%20JOIN%20workflow_job%20ON%20workflow_job.node_id%20%3D%20t1.workflow_job_node_id%5CnINNER%20JOIN%20workflow_run%20ON%20workflow_job.run_id%20%3D%20workflow_run.id%5CnORDER%20BY%20t1.sync_last_update_at%20desc%22,%22table%22:%22pull_request_review_event%22,%22timeColumnType%22:%22timestamp%22%7D%5D"
        }
      ],
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "queryType": "randomWalk",
          "rawQuery": true,
          "rawSql": "SELECT $__timeGroupAlias(t1.sync_last_update_at, 30m),\n       avg((unix_timestamp(t2.sync_last_update_at) - unix_timestamp(t1.sync_last_update_at)) / 60) \"queue_time (m)\"\nFROM\n  (SELECT dense_rank() over(PARTITION BY BINARY workflow_job_node_id\n                            ORDER BY sync_last_update_at) AS \"rerun_num\",\n          action,\n          workflow_job_node_id,\n          sync_last_update_at\n   FROM workflow_job_event\n   WHERE action = \"queued\"\n     AND $__timeFilter(sync_last_update_at) ) AS t1\nINNER JOIN\n  (SELECT dense_rank() over(PARTITION BY BINARY workflow_job_node_id\n                            ORDER BY sync_last_update_at) AS \"rerun_num\",\n          action,\n          workflow_job_node_id,\n          sync_last_update_at\n   FROM workflow_job_event\n   WHERE action = \"in_progress\"\n     AND $__timeFilter(sync_last_update_at) ) AS t2 ON t1.rerun_num = t2.rerun_num\nAND t1.workflow_job_node_id = t2.workflow_job_node_id\nAND t1.sync_last_update_at < t2.sync_last_update_at\nGROUP BY 1\nORDER BY $__timeGroup(t1.sync_last_update_at, 30m)",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "pk_id"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "pull_request_review_event",
          "timeColumn": "sync_last_update_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Average Queue Time (GHA)",
      "transformations": [],
      "type": "timeseries"
    },
    {
      "datasource": "GitHub",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 24,
        "x": 0,
        "y": 17
      },
      "id": 46,
      "options": {
        "showHeader": true
      },
      "pluginVersion": "8.1.1",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "queryType": "randomWalk",
          "rawQuery": true,
          "rawSql": "SELECT concat(\"https://github.com/pytorch/pytorch/actions/runs/\", id) AS \"url\",\n       name,\n       head_sha,\n       head_commit_message,\n       updated_at\nFROM workflow_run\nWHERE head_branch = \"master\"\n  AND conclusion = \"cancelled\"\n  AND $__timeFilter(updated_at)\nORDER BY updated_at desc",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "pk_id"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "pull_request_review_event",
          "timeColumn": "sync_last_update_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Cancelled Master Jobs",
      "type": "table"
    },
    {
      "collapsed": true,
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 27
      },
      "id": 44,
      "panels": [
        {
          "datasource": "GitHub",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 9,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 2,
                "pointSize": 6,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 2
          },
          "id": 4,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "targets": [
            {
              "format": "time_series",
              "group": [
                {
                  "params": [
                    "1h",
                    "none"
                  ],
                  "type": "time"
                }
              ],
              "metricColumn": "none",
              "queryType": "randomWalk",
              "rawQuery": true,
              "rawSql": "SELECT\n  $__timeGroupAlias(created_at,1h),\n  count(*) AS \"PRs created\"\nFROM pull_request\nWHERE\n  $__timeFilter(created_at)\nGROUP BY 1\nORDER BY $__timeGroup(created_at,1h)",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "*"
                    ],
                    "type": "column"
                  },
                  {
                    "params": [
                      "count"
                    ],
                    "type": "aggregate"
                  },
                  {
                    "params": [
                      "PRs created"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "table": "pull_request",
              "timeColumn": "created_at",
              "timeColumnType": "datetime",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            },
            {
              "format": "time_series",
              "group": [
                {
                  "params": [
                    "1h",
                    "none"
                  ],
                  "type": "time"
                }
              ],
              "hide": true,
              "metricColumn": "none",
              "queryType": "randomWalk",
              "rawQuery": false,
              "rawSql": "SELECT\n  $__timeGroupAlias(closed_at,1h),\n  count(*) AS \"PRs created\"\nFROM pull_request\nWHERE\n  $__timeFilter(closed_at)\nGROUP BY 1\nORDER BY $__timeGroup(closed_at,1h)",
              "refId": "C",
              "select": [
                [
                  {
                    "params": [
                      "*"
                    ],
                    "type": "column"
                  },
                  {
                    "params": [
                      "count"
                    ],
                    "type": "aggregate"
                  },
                  {
                    "params": [
                      "PRs created"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "table": "pull_request",
              "timeColumn": "closed_at",
              "timeColumnType": "datetime",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "title": "PRs Created per Hour",
          "type": "timeseries"
        },
        {
          "datasource": "GitHub",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "displayMode": "auto"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 12,
            "x": 12,
            "y": 2
          },
          "id": 2,
          "options": {
            "showHeader": true
          },
          "pluginVersion": "8.1.1",
          "targets": [
            {
              "format": "table",
              "group": [
                {
                  "params": [
                    "author_association"
                  ],
                  "type": "column"
                }
              ],
              "metricColumn": "none",
              "queryType": "randomWalk",
              "rawQuery": true,
              "rawSql": "SELECT\n  author_association,\n  count(*) AS \"PR Count\"\nFROM pull_request\nWHERE\n  $__timeFilter(created_at)\nGROUP BY author_association\nORDER BY created_at",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "author_association"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "table": "pull_request",
              "timeColumn": "created_at",
              "timeColumnType": "datetime",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "title": "PR Contributor Status",
          "type": "table"
        },
        {
          "datasource": "GitHub",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "bars",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 8
          },
          "id": 31,
          "links": [
            {
              "title": "Individual Jobs",
              "url": "https://metrics.pytorch.org/explore?orgId=1&left=%5B%22now-24h%22,%22now%22,%22GitHub%22,%7B%22datasource%22:%22GitHub%22,%22format%22:%22table%22,%22timeColumn%22:%22sync_last_update_at%22,%22metricColumn%22:%22none%22,%22group%22:%5B%5D,%22where%22:%5B%7B%22type%22:%22macro%22,%22name%22:%22$__timeFilter%22,%22params%22:%5B%5D%7D%5D,%22select%22:%5B%5B%7B%22type%22:%22column%22,%22params%22:%5B%22pk_id%22%5D%7D%5D%5D,%22rawQuery%22:true,%22rawSql%22:%22SELECT%20concat(%5C%22https:%2F%2Fgithub.com%2Fpytorch%2Fpytorch%2Fruns%2F%5C%22,%20workflow_job.id)%20AS%20%5C%22url%5C%22,%5Cn%20%20%20%20%20%20%20%20workflow_run.name%20AS%20%5C%22workflow%5C%22,%5Cn%20%20%20%20%20%20%20workflow_job.name,%5Cn%20%20%20%20%20%20%20workflow_job.conclusion,%5Cn%20%20%20%20%20%20%20workflow_job.head_sha,%5Cn%20%20%20%20%20%20%20workflow_job.completed_at,%5Cn%20%20%20%20%20%20%20(unix_timestamp(completed_at)%20-%20unix_timestamp(started_at))%20%2F%2060%20AS%20%5C%22runtime_min%5C%22%5CnFROM%20workflow_job%5CnINNER%20JOIN%20workflow_run%20ON%20run_id%20%3D%20workflow_run.id%5CnWHERE%20workflow_run.head_branch%20%3D%20%5C%22master%5C%22%5Cn%20%20AND%20$__timeFilter(completed_at)%5Cn%20%20AND%20(unix_timestamp(completed_at)%20-%20unix_timestamp(started_at))%20%2F%2060%20%3E%20120%5CnORDER%20BY%20workflow_job.completed_at%22,%22table%22:%22pull_request_review_event%22,%22timeColumnType%22:%22timestamp%22%7D,%7B%22datasource%22:%22GitHub%22,%22format%22:%22time_series%22,%22timeColumn%22:%22sync_last_update_at%22,%22metricColumn%22:%22none%22,%22group%22:%5B%5D,%22where%22:%5B%7B%22type%22:%22macro%22,%22name%22:%22$__timeFilter%22,%22params%22:%5B%5D%7D%5D,%22select%22:%5B%5B%7B%22type%22:%22column%22,%22params%22:%5B%22pk_id%22%5D%7D%5D%5D,%22rawQuery%22:true,%22rawSql%22:%22SELECT%20$__timeGroupAlias(completed_at,%2030m),%5Cn%20%20%20%20%20%20%20%20count(*)%20as%20%5C%22too%20long%5C%22%5CnFROM%20workflow_job%5CnINNER%20JOIN%20workflow_run%20ON%20run_id%20%3D%20workflow_run.id%5CnWHERE%20workflow_run.head_branch%20%3D%20%5C%22master%5C%22%5Cn%20%20AND%20$__timeFilter(completed_at)%5Cn%20%20AND%20(unix_timestamp(completed_at)%20-%20unix_timestamp(started_at))%20%2F%2060%20%3E%20120%5CnGROUP%20BY%201%5CnORDER%20BY%20$__timeGroup(completed_at,30m)%22,%22table%22:%22pull_request_review_event%22,%22timeColumnType%22:%22timestamp%22%7D%5D"
            }
          ],
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "targets": [
            {
              "format": "time_series",
              "group": [],
              "metricColumn": "none",
              "queryType": "randomWalk",
              "rawQuery": true,
              "rawSql": "SELECT $__timeGroupAlias(completed_at, 30m),\n        count(*) as \"too long\"\nFROM workflow_job\nINNER JOIN workflow_run ON run_id = workflow_run.id\nWHERE workflow_run.head_branch = \"master\"\n  AND $__timeFilter(completed_at)\n  AND (unix_timestamp(completed_at) - unix_timestamp(started_at)) / 60 > 120\nGROUP BY 1\nORDER BY $__timeGroup(completed_at,30m)",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "pk_id"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "table": "pull_request_review_event",
              "timeColumn": "sync_last_update_at",
              "timeColumnType": "timestamp",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            },
            {
              "format": "time_series",
              "group": [],
              "hide": false,
              "metricColumn": "none",
              "rawQuery": true,
              "rawSql": "SELECT $__timeGroupAlias(completed_at, 30m),\n        count(*) as \"not too long\"\nFROM workflow_job\nINNER JOIN workflow_run ON run_id = workflow_run.id\nWHERE workflow_run.head_branch = \"master\"\n  AND $__timeFilter(completed_at)\n  AND (unix_timestamp(completed_at) - unix_timestamp(started_at)) / 60 <= 120\nGROUP BY 1\nORDER BY $__timeGroup(completed_at,30m)",
              "refId": "B",
              "select": [
                [
                  {
                    "params": [
                      "pk_id"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "table": "pull_request_review_event",
              "timeColumn": "sync_last_update_at",
              "timeColumnType": "timestamp",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "title": "% of Jobs that took > 2 hours",
          "transformations": [
            {
              "id": "calculateField",
              "options": {
                "binary": {
                  "left": "too long",
                  "operator": "+",
                  "reducer": "sum",
                  "right": "not too long"
                },
                "mode": "binary",
                "reduce": {
                  "reducer": "sum"
                }
              }
            },
            {
              "id": "calculateField",
              "options": {
                "alias": "percent dec",
                "binary": {
                  "left": "too long",
                  "operator": "/",
                  "reducer": "sum",
                  "right": "too long + not too long"
                },
                "mode": "binary",
                "reduce": {
                  "reducer": "sum"
                }
              }
            },
            {
              "id": "calculateField",
              "options": {
                "alias": "Percent of All Jobs",
                "binary": {
                  "left": "percent dec",
                  "operator": "*",
                  "reducer": "sum",
                  "right": "100"
                },
                "mode": "binary",
                "reduce": {
                  "reducer": "sum"
                },
                "replaceFields": true
              }
            }
          ],
          "type": "timeseries"
        },
        {
          "datasource": "GitHub",
          "description": "Note: This is ALL commits to PyTorch, not just to `master`!",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 9,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 2,
                "pointSize": 6,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 10
          },
          "id": 9,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "targets": [
            {
              "format": "time_series",
              "group": [
                {
                  "params": [
                    "1h",
                    "none"
                  ],
                  "type": "time"
                }
              ],
              "metricColumn": "none",
              "queryType": "randomWalk",
              "rawQuery": true,
              "rawSql": "SELECT\n  $__timeGroupAlias(head_commit_timestamp,1h),\n  count(*) as \"Commits\"\nFROM push_event\nWHERE\n  $__timeFilter(head_commit_timestamp)\nGROUP BY 1\nORDER BY $__timeGroup(head_commit_timestamp,1h)",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "*"
                    ],
                    "type": "column"
                  },
                  {
                    "params": [
                      "count"
                    ],
                    "type": "aggregate"
                  },
                  {
                    "params": [
                      "PRs created"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "table": "pull_request",
              "timeColumn": "created_at",
              "timeColumnType": "datetime",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            },
            {
              "format": "time_series",
              "group": [
                {
                  "params": [
                    "1h",
                    "none"
                  ],
                  "type": "time"
                }
              ],
              "hide": true,
              "metricColumn": "none",
              "queryType": "randomWalk",
              "rawQuery": false,
              "rawSql": "SELECT\n  $__timeGroupAlias(closed_at,1h),\n  count(*) AS \"PRs created\"\nFROM pull_request\nWHERE\n  $__timeFilter(closed_at)\nGROUP BY 1\nORDER BY $__timeGroup(closed_at,1h)",
              "refId": "C",
              "select": [
                [
                  {
                    "params": [
                      "*"
                    ],
                    "type": "column"
                  },
                  {
                    "params": [
                      "count"
                    ],
                    "type": "aggregate"
                  },
                  {
                    "params": [
                      "PRs created"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "table": "pull_request",
              "timeColumn": "closed_at",
              "timeColumnType": "datetime",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "title": "Commits per Hour",
          "type": "timeseries"
        },
        {
          "datasource": "GitHub",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 16
          },
          "id": 26,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "targets": [
            {
              "format": "time_series",
              "group": [],
              "metricColumn": "none",
              "queryType": "randomWalk",
              "rawQuery": true,
              "rawSql": "select starred_at as \"time\",\n    pk_id+50339 as \"star num\" -- add the offset of stars to when we started recording events\nfrom star_event\nwhere action = \"created\" and $__timeFilter(starred_at);",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "pk_id"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "table": "pull_request_review_event",
              "timeColumn": "sync_last_update_at",
              "timeColumnType": "timestamp",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "title": "Star Growth",
          "type": "timeseries"
        },
        {
          "datasource": "GitHub",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 24
                  }
                ]
              },
              "unit": "h"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 4,
            "x": 0,
            "y": 18
          },
          "id": 23,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "first"
              ],
              "fields": "/^hours_since_push$/",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.1",
          "targets": [
            {
              "format": "table",
              "group": [],
              "metricColumn": "none",
              "queryType": "randomWalk",
              "rawQuery": true,
              "rawSql": "select push_event.ref,\n    status_event.sha,\n    (UNIX_TIMESTAMP(CURRENT_TIMESTAMP()) - UNIX_TIMESTAMP(status_event.updated_at)) / 60 / 60 as \"hours_since_push\"\nfrom status_event\n    inner join push_event on sha = push_event.head_commit_id\nwhere push_event.ref = \"refs/heads/master\"\n    and context like \"ci/circleci: pytorch_python_doc_build\"\n    and state = \"success\"\norder by updated_at desc\nlimit 1;",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "output_annotations_count"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "table": "check_run",
              "timeColumn": "started_at",
              "timeColumnType": "timestamp",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "title": "Last master docs push",
          "type": "stat"
        },
        {
          "datasource": "GitHub",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 24
                  }
                ]
              },
              "unit": "h"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 4,
            "x": 8,
            "y": 18
          },
          "id": 24,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "first"
              ],
              "fields": "/^hours_since_push$/",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.1.1",
          "targets": [
            {
              "format": "table",
              "group": [],
              "metricColumn": "none",
              "queryType": "randomWalk",
              "rawQuery": true,
              "rawSql": "select push_event.ref,\n    status_event.sha,\n    (UNIX_TIMESTAMP(CURRENT_TIMESTAMP()) - UNIX_TIMESTAMP(status_event.updated_at)) / 60 / 60 as \"hours_since_push\"\nfrom status_event\n    inner join push_event on sha = push_event.head_commit_id\nwhere push_event.ref = \"refs/heads/nightly\"\n    and context like \"ci/circleci: pytorch_python_doc_build\"\n    and state = \"success\"\norder by updated_at desc\nlimit 1;",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "output_annotations_count"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "table": "check_run",
              "timeColumn": "started_at",
              "timeColumnType": "timestamp",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "title": "Last nightly docs push",
          "type": "stat"
        },
        {
          "datasource": "GitHub",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "cancelled"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "red",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "success"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "green",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "action_required"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "yellow",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 22
          },
          "id": 15,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "targets": [
            {
              "format": "time_series",
              "group": [
                {
                  "params": [
                    "10m",
                    "none"
                  ],
                  "type": "time"
                }
              ],
              "metricColumn": "none",
              "queryType": "randomWalk",
              "rawQuery": true,
              "rawSql": "SELECT\n  $__timeGroupAlias(sync_last_update_at,10m),\n  count(*) AS \"completed\"\nFROM workflow_job_event\nWHERE\n  $__timeFilter(sync_last_update_at) AND\n  action = 'completed'\nGROUP BY 1\nORDER BY $__timeGroup(sync_last_update_at,10m)",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "*"
                    ],
                    "type": "column"
                  },
                  {
                    "params": [
                      "count"
                    ],
                    "type": "aggregate"
                  },
                  {
                    "params": [
                      "cancelled"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "table": "check_run",
              "timeColumn": "started_at",
              "timeColumnType": "timestamp",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                },
                {
                  "datatype": "varchar",
                  "name": "",
                  "params": [
                    "conclusion",
                    "=",
                    "'cancelled'"
                  ],
                  "type": "expression"
                }
              ]
            },
            {
              "format": "time_series",
              "group": [
                {
                  "params": [
                    "10m",
                    "none"
                  ],
                  "type": "time"
                }
              ],
              "hide": false,
              "metricColumn": "none",
              "queryType": "randomWalk",
              "rawQuery": true,
              "rawSql": "SELECT\n  $__timeGroupAlias(sync_last_update_at,10m),\n  count(*) AS \"queued\"\nFROM workflow_job_event\nWHERE\n  $__timeFilter(sync_last_update_at) AND\n  action = 'queued'\nGROUP BY 1\nORDER BY $__timeGroup(sync_last_update_at,10m)",
              "refId": "B",
              "select": [
                [
                  {
                    "params": [
                      "*"
                    ],
                    "type": "column"
                  },
                  {
                    "params": [
                      "count"
                    ],
                    "type": "aggregate"
                  },
                  {
                    "params": [
                      "cancelled"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "table": "check_run",
              "timeColumn": "started_at",
              "timeColumnType": "timestamp",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                },
                {
                  "datatype": "varchar",
                  "name": "",
                  "params": [
                    "conclusion",
                    "=",
                    "'cancelled'"
                  ],
                  "type": "expression"
                }
              ]
            },
            {
              "format": "time_series",
              "group": [
                {
                  "params": [
                    "10m",
                    "none"
                  ],
                  "type": "time"
                }
              ],
              "hide": false,
              "metricColumn": "none",
              "queryType": "randomWalk",
              "rawQuery": true,
              "rawSql": "SELECT\n  $__timeGroupAlias(sync_last_update_at,10m),\n  count(*) AS \"started\"\nFROM workflow_job_event\nWHERE\n  $__timeFilter(sync_last_update_at) AND\n  action = 'started'\nGROUP BY 1\nORDER BY $__timeGroup(sync_last_update_at,10m)",
              "refId": "C",
              "select": [
                [
                  {
                    "params": [
                      "*"
                    ],
                    "type": "column"
                  },
                  {
                    "params": [
                      "count"
                    ],
                    "type": "aggregate"
                  },
                  {
                    "params": [
                      "cancelled"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "table": "check_run",
              "timeColumn": "started_at",
              "timeColumnType": "timestamp",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                },
                {
                  "datatype": "varchar",
                  "name": "",
                  "params": [
                    "conclusion",
                    "=",
                    "'cancelled'"
                  ],
                  "type": "expression"
                }
              ]
            }
          ],
          "title": "Workflow Job Events",
          "type": "timeseries"
        },
        {
          "datasource": "GitHub",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 9,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 2,
                "pointSize": 6,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 30
          },
          "id": 34,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "targets": [
            {
              "format": "time_series",
              "group": [
                {
                  "params": [
                    "1h",
                    "none"
                  ],
                  "type": "time"
                }
              ],
              "metricColumn": "none",
              "queryType": "randomWalk",
              "rawQuery": true,
              "rawSql": "SELECT\n  $__timeGroupAlias(started_at,1h),\n  count(*) as \"Check Runs\"\nFROM check_run\nWHERE\n  $__timeFilter(started_at)\nGROUP BY 1\nORDER BY $__timeGroup(started_at,1h)",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "*"
                    ],
                    "type": "column"
                  },
                  {
                    "params": [
                      "count"
                    ],
                    "type": "aggregate"
                  },
                  {
                    "params": [
                      "PRs created"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "table": "pull_request",
              "timeColumn": "created_at",
              "timeColumnType": "datetime",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            },
            {
              "format": "time_series",
              "group": [
                {
                  "params": [
                    "1h",
                    "none"
                  ],
                  "type": "time"
                }
              ],
              "hide": true,
              "metricColumn": "none",
              "queryType": "randomWalk",
              "rawQuery": false,
              "rawSql": "SELECT\n  $__timeGroupAlias(closed_at,1h),\n  count(*) AS \"PRs created\"\nFROM pull_request\nWHERE\n  $__timeFilter(closed_at)\nGROUP BY 1\nORDER BY $__timeGroup(closed_at,1h)",
              "refId": "C",
              "select": [
                [
                  {
                    "params": [
                      "*"
                    ],
                    "type": "column"
                  },
                  {
                    "params": [
                      "count"
                    ],
                    "type": "aggregate"
                  },
                  {
                    "params": [
                      "PRs created"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "table": "pull_request",
              "timeColumn": "closed_at",
              "timeColumnType": "datetime",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "title": "Check Runs per Hour",
          "type": "timeseries"
        }
      ],
      "title": "Repo Activity",
      "type": "row"
    },
    {
      "collapsed": false,
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 28
      },
      "id": 40,
      "panels": [],
      "title": "CI Reliability Details",
      "type": "row"
    },
    {
      "datasource": "GitHub",
      "description": "Failures on ROCm Jobs",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 5,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "line"
            }
          },
          "links": [],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "failing_jobs"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "passing_jobs"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 29
      },
      "id": 36,
      "links": [
        {
          "targetBlank": true,
          "title": "See Individual Jobs",
          "url": "https://metrics.pytorch.org/explore?orgId=1&left=%5B%22now-24h%22,%22now%22,%22GitHub%22,%7B%22datasource%22:%22GitHub%22,%22format%22:%22table%22,%22timeColumn%22:%22sync_last_update_at%22,%22metricColumn%22:%22none%22,%22group%22:%5B%5D,%22where%22:%5B%7B%22type%22:%22macro%22,%22name%22:%22$__timeFilter%22,%22params%22:%5B%5D%7D%5D,%22select%22:%5B%5B%7B%22type%22:%22column%22,%22params%22:%5B%22pk_id%22%5D%7D%5D%5D,%22rawQuery%22:true,%22rawSql%22:%22SELECT%20context,%20target_url,%20state%5Cn%20%20%20FROM%20status_event%5Cn%20%20%20WHERE%20$__timeFilter(updated_at)%5Cn%20%20%20%20%20AND%20context%20like%20%5C%22pr%2Fpytorch-linux-bionic-rocm%25%5C%22%5Cn%20%20%20%20%20AND%20state%20!%3D%20%5C%22pending%5C%22%22,%22table%22:%22pull_request_review_event%22,%22timeColumnType%22:%22timestamp%22%7D,%7B%22datasource%22:%22GitHub%22,%22format%22:%22table%22,%22timeColumn%22:%22sync_last_update_at%22,%22metricColumn%22:%22none%22,%22group%22:%5B%5D,%22where%22:%5B%7B%22type%22:%22macro%22,%22name%22:%22$__timeFilter%22,%22params%22:%5B%5D%7D%5D,%22select%22:%5B%5B%7B%22type%22:%22column%22,%22params%22:%5B%22pk_id%22%5D%7D%5D%5D,%22rawQuery%22:true,%22rawSql%22:%22SELECT%20time,%5Cn%20%20%20%20%20%20%20failing_jobs,%5Cn%20%20%20%20%20%20%20passing_jobs%5CnFROM%5Cn%20%20(SELECT%20$__timeGroupAlias(updated_at,%2030m),%5Cn%20%20%20%20%20%20%20%20%20%20sum(CASE%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20WHEN%20state%20!%3D%20%5C%22success%5C%22%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20AND%20state%20!%3D%20%5C%22pending%5C%22%20THEN%201%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20ELSE%200%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20END)%20AS%20failing_jobs,%5Cn%20%20%20%20%20%20%20%20%20%20sum(CASE%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20WHEN%20state%20%3D%20%5C%22success%5C%22%20THEN%201%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20ELSE%200%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20END)%20AS%20passing_jobs%5Cn%20%20%20FROM%20status_event%5Cn%20%20%20WHERE%20$__timeFilter(updated_at)%5Cn%20%20%20%20%20AND%20context%20like%20%5C%22pr%2Fpytorch-linux-bionic-rocm%25%5C%22%5Cn%20%20%20GROUP%20BY%201%5Cn%20%20%20ORDER%20BY%20$__timeGroup(updated_at,%2030m))%20AS%20nested%22,%22table%22:%22pull_request_review_event%22,%22timeColumnType%22:%22timestamp%22%7D%5D"
        }
      ],
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "queryType": "randomWalk",
          "rawQuery": true,
          "rawSql": "SELECT time,\n       failing_jobs,\n       passing_jobs\nFROM\n  (SELECT $__timeGroupAlias(updated_at, 30m),\n          sum(CASE\n                  WHEN state != \"success\"\n                       AND state != \"pending\" THEN 1\n                  ELSE 0\n              END) AS failing_jobs,\n          sum(CASE\n                  WHEN state = \"success\" THEN 1\n                  ELSE 0\n              END) AS passing_jobs\n   FROM status_event\n   WHERE $__timeFilter(updated_at)\n     AND context like \"pr/pytorch-linux-bionic-rocm%\"\n   GROUP BY 1\n   ORDER BY $__timeGroup(updated_at, 30m)) AS nested",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "pk_id"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "pull_request_review_event",
          "timeColumn": "sync_last_update_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "ROCm PR Job Status",
      "transformations": [],
      "type": "timeseries"
    },
    {
      "datasource": "GitHub",
      "description": "Failures across all sources (commits, PRs, nightlies)",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 29
      },
      "id": 21,
      "options": {
        "showHeader": true
      },
      "pluginVersion": "8.1.1",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "queryType": "randomWalk",
          "rawQuery": true,
          "rawSql": "select context, count(*) as \"num_failures\"\nfrom status_event \nWHERE\n  $__timeFilter(created_at) and state!=\"pending\" and state!=\"success\"\nGROUP BY context\nORDER BY COUNT(*) desc;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "output_annotations_count"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "check_run",
          "timeColumn": "started_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Top Failing Jobs",
      "type": "table"
    },
    {
      "datasource": "Metrics",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 37
      },
      "id": 48,
      "options": {
        "showHeader": true
      },
      "pluginVersion": "8.1.1",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "queryType": "randomWalk",
          "rawQuery": true,
          "rawSql": "SELECT concat(\"https://github.com/pytorch/pytorch/actions/runs/\", workflow_id) AS \"url\",\n       concat(concat(suite, \".\"), name) AS \"test_name\",\n       build_environment,\n       ref,\n       updated_at\nFROM test_failures\nWHERE branch = \"master\"\n  AND $__timeFilter(updated_at);",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "id"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "import_stats",
          "timeColumn": "updated_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "master test failures",
      "type": "table"
    },
    {
      "datasource": "Metrics",
      "description": "tests detected as flaky in all pytorch CI (both trunk and PRs)",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "num_green"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 69
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "num_red"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 76
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "on_win"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 66
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "on_linux"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 70
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "on_mac"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 75
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "file"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 112
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 182
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "suite"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 92
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "example_url"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 371
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "on_trunk"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 103
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 44
      },
      "id": 57,
      "options": {
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "num_red"
          }
        ]
      },
      "pluginVersion": "8.1.1",
      "targets": [
        {
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "queryType": "randomWalk",
          "rawQuery": true,
          "rawSql": "SELECT \n  name,\n  suite,\n  file,\n  sum(num_green) AS \"num_green\",\n  sum(num_red) AS \"num_red\",\n  sum(build_environment LIKE \"%win%\") AS \"on_win\",\n  sum(build_environment LIKE \"%linux%\") AS \"on_linux\",\n  sum(build_environment LIKE \"%mac%\") AS \"on_mac\",\n  concat(\"https://github.com/pytorch/pytorch/actions/runs/\", workflow_id) AS \"example_url\",\n  sum(isnull(pr)) AS \"on_trunk\",\n  sum(not isnull(pr)) AS \"on_prs\"\nFROM flaky_tests\nWHERE $__timeFilter(updated_at) AND (isnull(pr) OR (pr <> \"68754\")) -- 68754 is my test PR with fake flaky tests\nGROUP BY name, suite, file\nORDER BY \"num_red\"",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "id"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "import_stats",
          "timeColumn": "updated_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "flaky tests",
      "type": "table"
    },
    {
      "datasource": "GitHub",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "head_commit_message"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 286
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 53
      },
      "id": 49,
      "options": {
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "8.1.1",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "queryType": "randomWalk",
          "rawQuery": true,
          "rawSql": "SELECT head_commit_message, head_commit_author_username as \"reverter\", head_commit_id as \"sha\", head_commit_timestamp\nFROM push_event\nWHERE ref = \"refs/heads/master\"\n  AND head_commit_message like \"Revert D%\"\n  AND $__timeFilter(head_commit_timestamp)\nORDER BY head_commit_timestamp DESC;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "id"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "import_stats",
          "timeColumn": "updated_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "master reverts",
      "type": "table"
    },
    {
      "datasource": "GitHub",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 60
      },
      "id": 38,
      "options": {
        "barWidth": 0.97,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "none",
        "text": {},
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "queryType": "randomWalk",
          "rawQuery": true,
          "rawSql": "select replace(\n        replace(replace(workflow_job.labels, \"]\", \"\"), \"[\", \"\"),\n        '\"',\n        \"\"\n    ) as \"instance\",\n    sum(\n        UNIX_TIMESTAMP(workflow_job.completed_at) - UNIX_TIMESTAMP(workflow_job.started_at)\n    ) / 60 as \"trunk_minutes\",\n    pr_query.total_minutes as \"pr_minutes\"\nfrom workflow_job\n    inner join push_event on workflow_job.head_sha = push_event.head_commit_id\n    inner join (\n        select workflow_job.labels as \"instance\",\n            sum(\n                UNIX_TIMESTAMP(workflow_job.completed_at) - UNIX_TIMESTAMP(workflow_job.started_at)\n            ) / 60 as \"total_minutes\"\n        from workflow_job\n            inner join push_event on workflow_job.head_sha = push_event.head_commit_id\n        where push_event.ref != \"refs/heads/master\"\n            and workflow_job.status = \"completed\"\n            and workflow_job.labels != \"[]\"\n            and $__timeFilter(workflow_job.completed_at)\n            and $__timeFilter(workflow_job.started_at)\n        group by workflow_job.labels\n    ) as pr_query on pr_query.instance = workflow_job.labels\nwhere push_event.ref = \"refs/heads/master\"\n    and workflow_job.status = \"completed\"\n    and workflow_job.labels != \"[]\"\n    and $__timeFilter(workflow_job.completed_at)\n    and $__timeFilter(workflow_job.started_at)\ngroup by workflow_job.labels",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "pk_id"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "pull_request_review_event",
          "timeColumn": "sync_last_update_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Execution time on master vs PR for workflow jobs",
      "type": "barchart"
    },
    {
      "datasource": "GitHub",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "cancelled"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "success"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "action_required"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "yellow",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 60
      },
      "id": 6,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "format": "time_series",
          "group": [
            {
              "params": [
                "10m",
                "none"
              ],
              "type": "time"
            }
          ],
          "metricColumn": "none",
          "queryType": "randomWalk",
          "rawQuery": false,
          "rawSql": "SELECT\n  $__timeGroupAlias(started_at,10m),\n  count(*) AS \"cancelled\"\nFROM check_run\nWHERE\n  $__timeFilter(started_at) AND\n  conclusion = 'cancelled'\nGROUP BY 1\nORDER BY $__timeGroup(started_at,10m)",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "*"
                ],
                "type": "column"
              },
              {
                "params": [
                  "count"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "cancelled"
                ],
                "type": "alias"
              }
            ]
          ],
          "table": "check_run",
          "timeColumn": "started_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            },
            {
              "datatype": "varchar",
              "name": "",
              "params": [
                "conclusion",
                "=",
                "'cancelled'"
              ],
              "type": "expression"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [
            {
              "params": [
                "10m",
                "none"
              ],
              "type": "time"
            }
          ],
          "hide": false,
          "metricColumn": "none",
          "queryType": "randomWalk",
          "rawQuery": false,
          "rawSql": "SELECT\n  $__timeGroupAlias(started_at,10m),\n  count(*) AS \"success\"\nFROM check_run\nWHERE\n  $__timeFilter(started_at) AND\n  conclusion = 'success'\nGROUP BY 1\nORDER BY $__timeGroup(started_at,10m)",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "*"
                ],
                "type": "column"
              },
              {
                "params": [
                  "count"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "success"
                ],
                "type": "alias"
              }
            ]
          ],
          "table": "check_run",
          "timeColumn": "started_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            },
            {
              "datatype": "varchar",
              "name": "",
              "params": [
                "conclusion",
                "=",
                "'success'"
              ],
              "type": "expression"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [
            {
              "params": [
                "10m",
                "none"
              ],
              "type": "time"
            }
          ],
          "hide": false,
          "metricColumn": "none",
          "queryType": "randomWalk",
          "rawQuery": false,
          "rawSql": "SELECT\n  $__timeGroupAlias(started_at,10m),\n  count(*) AS \"failure\"\nFROM check_run\nWHERE\n  $__timeFilter(started_at) AND\n  conclusion = 'failure'\nGROUP BY 1\nORDER BY $__timeGroup(started_at,10m)",
          "refId": "C",
          "select": [
            [
              {
                "params": [
                  "*"
                ],
                "type": "column"
              },
              {
                "params": [
                  "count"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "failure"
                ],
                "type": "alias"
              }
            ]
          ],
          "table": "check_run",
          "timeColumn": "started_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            },
            {
              "datatype": "varchar",
              "name": "",
              "params": [
                "conclusion",
                "=",
                "'failure'"
              ],
              "type": "expression"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [
            {
              "params": [
                "10m",
                "none"
              ],
              "type": "time"
            }
          ],
          "hide": false,
          "metricColumn": "none",
          "queryType": "randomWalk",
          "rawQuery": false,
          "rawSql": "SELECT\n  $__timeGroupAlias(started_at,10m),\n  count(*) AS \"skipped\"\nFROM check_run\nWHERE\n  $__timeFilter(started_at) AND\n  conclusion = 'skipped'\nGROUP BY 1\nORDER BY $__timeGroup(started_at,10m)",
          "refId": "D",
          "select": [
            [
              {
                "params": [
                  "*"
                ],
                "type": "column"
              },
              {
                "params": [
                  "count"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "skipped"
                ],
                "type": "alias"
              }
            ]
          ],
          "table": "check_run",
          "timeColumn": "started_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            },
            {
              "datatype": "varchar",
              "name": "",
              "params": [
                "conclusion",
                "=",
                "'skipped'"
              ],
              "type": "expression"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [
            {
              "params": [
                "10m",
                "none"
              ],
              "type": "time"
            }
          ],
          "hide": false,
          "metricColumn": "none",
          "queryType": "randomWalk",
          "rawQuery": false,
          "rawSql": "SELECT\n  $__timeGroupAlias(started_at,10m),\n  count(*) AS \"action_required\"\nFROM check_run\nWHERE\n  $__timeFilter(started_at) AND\n  conclusion = 'action_required'\nGROUP BY 1\nORDER BY $__timeGroup(started_at,10m)",
          "refId": "E",
          "select": [
            [
              {
                "params": [
                  "*"
                ],
                "type": "column"
              },
              {
                "params": [
                  "count"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "action_required"
                ],
                "type": "alias"
              }
            ]
          ],
          "table": "check_run",
          "timeColumn": "started_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            },
            {
              "datatype": "varchar",
              "name": "",
              "params": [
                "conclusion",
                "=",
                "'action_required'"
              ],
              "type": "expression"
            }
          ]
        }
      ],
      "title": "Check Runs Status",
      "type": "timeseries"
    },
    {
      "datasource": "CloudWatch",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Errors_Sum"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 68
      },
      "id": 8,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "alias": "",
          "dimensions": {
            "FunctionName": "github-webhook-rds-sync-app"
          },
          "expression": "",
          "id": "",
          "matchExact": true,
          "metricName": "Invocations",
          "namespace": "AWS/Lambda",
          "period": "1m",
          "queryType": "randomWalk",
          "refId": "A",
          "region": "default",
          "statistics": [
            "Sum"
          ]
        },
        {
          "alias": "",
          "dimensions": {
            "FunctionName": "github-webhook-rds-sync-app"
          },
          "expression": "",
          "hide": false,
          "id": "",
          "matchExact": true,
          "metricName": "Errors",
          "namespace": "AWS/Lambda",
          "period": "1m",
          "queryType": "randomWalk",
          "refId": "B",
          "region": "default",
          "statistics": [
            "Sum"
          ]
        }
      ],
      "title": "Sync Lambda Status",
      "type": "timeseries"
    },
    {
      "datasource": "GitHub",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "cancelled"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "success"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "action_required"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "yellow",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 68
      },
      "id": 22,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "format": "time_series",
          "group": [
            {
              "params": [
                "10m",
                "none"
              ],
              "type": "time"
            }
          ],
          "hide": false,
          "metricColumn": "none",
          "queryType": "randomWalk",
          "rawQuery": false,
          "rawSql": "SELECT\n  $__timeGroupAlias(started_at,10m),\n  count(*) AS \"success\"\nFROM check_run\nWHERE\n  $__timeFilter(started_at) AND\n  conclusion = 'success'\nGROUP BY 1\nORDER BY $__timeGroup(started_at,10m)",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "*"
                ],
                "type": "column"
              },
              {
                "params": [
                  "count"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "success"
                ],
                "type": "alias"
              }
            ]
          ],
          "table": "check_run",
          "timeColumn": "started_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            },
            {
              "datatype": "varchar",
              "name": "",
              "params": [
                "conclusion",
                "=",
                "'success'"
              ],
              "type": "expression"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [
            {
              "params": [
                "10m",
                "none"
              ],
              "type": "time"
            }
          ],
          "hide": false,
          "metricColumn": "none",
          "queryType": "randomWalk",
          "rawQuery": true,
          "rawSql": "SELECT\n  $__timeGroupAlias(started_at,10m),\n  count(*) AS \"failure\"\nFROM check_run\nWHERE\n  $__timeFilter(started_at) AND\n  conclusion = 'failure'\nGROUP BY 1\nORDER BY $__timeGroup(started_at,10m)",
          "refId": "C",
          "select": [
            [
              {
                "params": [
                  "*"
                ],
                "type": "column"
              },
              {
                "params": [
                  "count"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "failure"
                ],
                "type": "alias"
              }
            ]
          ],
          "table": "check_run",
          "timeColumn": "started_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            },
            {
              "datatype": "varchar",
              "name": "",
              "params": [
                "conclusion",
                "=",
                "'failure'"
              ],
              "type": "expression"
            }
          ]
        }
      ],
      "title": "Check Run Successes / (Fail + Successes)",
      "transformations": [
        {
          "id": "calculateField",
          "options": {
            "alias": "failure un-nanned",
            "mode": "reduceRow",
            "reduce": {
              "include": [
                "failure"
              ],
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "success un-nanned",
            "mode": "reduceRow",
            "reduce": {
              "include": [
                "success"
              ],
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "binary": {
              "left": "failure un-nanned",
              "operator": "+",
              "reducer": "sum",
              "right": "success un-nanned"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "Success Percent",
            "binary": {
              "left": "success un-nanned",
              "operator": "/",
              "reducer": "sum",
              "right": "failure un-nanned + success un-nanned"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            },
            "replaceFields": true
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "alert": {
        "alertRuleTags": {},
        "conditions": [
          {
            "evaluator": {
              "params": [
                24
              ],
              "type": "gt"
            },
            "operator": {
              "type": "and"
            },
            "query": {
              "params": [
                "A",
                "5m",
                "now"
              ]
            },
            "reducer": {
              "params": [],
              "type": "last"
            },
            "type": "query"
          }
        ],
        "executionErrorState": "alerting",
        "for": "1m",
        "frequency": "1d",
        "handler": 1,
        "message": "Nightly hasn't been updated in over a day",
        "name": "Last nightly update alert",
        "noDataState": "no_data",
        "notifications": []
      },
      "datasource": "GitHub",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 12
              }
            ]
          },
          "unit": "h"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 0,
        "y": 76
      },
      "id": 17,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "pluginVersion": "8.0.6",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "queryType": "randomWalk",
          "rawQuery": true,
          "rawSql": "select\n  CURRENT_TIMESTAMP() as \"time\",\n  ref,\n  head_commit_message, (UNIX_TIMESTAMP(CURRENT_TIMESTAMP()) - 25200 - UNIX_TIMESTAMP(head_commit_timestamp)) / 60 / 60 as \"hours_since_push\"\nfrom push_event\nwhere ref='refs/heads/nightly' and (head_commit_added!=\"[]\" or head_commit_removed!=\"[]\" or head_commit_modified!=\"[]\")\norder by head_commit_timestamp desc \nlimit 1;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "output_annotations_count"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "check_run",
          "timeColumn": "started_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [
        {
          "colorMode": "critical",
          "op": "gt",
          "value": 24,
          "visible": true
        }
      ],
      "title": "Last nightly update",
      "type": "timeseries"
    },
    {
      "alert": {
        "alertRuleTags": {},
        "conditions": [
          {
            "evaluator": {
              "params": [
                24
              ],
              "type": "gt"
            },
            "operator": {
              "type": "and"
            },
            "query": {
              "params": [
                "A",
                "5m",
                "now"
              ]
            },
            "reducer": {
              "params": [],
              "type": "last"
            },
            "type": "query"
          }
        ],
        "executionErrorState": "alerting",
        "for": "1m",
        "frequency": "1d",
        "handler": 1,
        "name": "Last viable/strict update alert",
        "noDataState": "no_data",
        "notifications": []
      },
      "datasource": "GitHub",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 12
              }
            ]
          },
          "unit": "h"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 4,
        "y": 76
      },
      "id": 19,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "pluginVersion": "8.0.6",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "queryType": "randomWalk",
          "rawQuery": true,
          "rawSql": "select\n  CURRENT_TIMESTAMP() as \"time\",\n  ref,\n  head_commit_message, (UNIX_TIMESTAMP(CURRENT_TIMESTAMP()) - 25200 - UNIX_TIMESTAMP(head_commit_timestamp)) / 60 / 60 as \"hours_since_push\"\nfrom push_event\nwhere ref='refs/heads/viable/strict' and (head_commit_added!=\"[]\" or head_commit_removed!=\"[]\" or head_commit_modified!=\"[]\")\norder by head_commit_timestamp desc \nlimit 1;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "output_annotations_count"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "check_run",
          "timeColumn": "started_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [
        {
          "colorMode": "critical",
          "op": "gt",
          "value": 24,
          "visible": true
        }
      ],
      "title": "Last viable/strict update",
      "type": "timeseries"
    },
    {
      "collapsed": true,
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 80
      },
      "id": 51,
      "panels": [
        {
          "datasource": "GitHub",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 12,
            "w": 24,
            "x": 0,
            "y": 4
          },
          "id": 55,
          "links": [
            {
              "targetBlank": true,
              "title": "Individual Jobs",
              "url": "https://metrics.pytorch.org/explore?orgId=1&left=%5B%22now-24h%22,%22now%22,%22GitHub%22,%7B%22datasource%22:%22GitHub%22,%22format%22:%22table%22,%22timeColumn%22:%22sync_last_update_at%22,%22metricColumn%22:%22none%22,%22group%22:%5B%5D,%22where%22:%5B%7B%22type%22:%22macro%22,%22name%22:%22$__timeFilter%22,%22params%22:%5B%5D%7D%5D,%22select%22:%5B%5B%7B%22type%22:%22column%22,%22params%22:%5B%22pk_id%22%5D%7D%5D%5D,%22rawQuery%22:true,%22rawSql%22:%22SELECT%20CONCAT(CONCAT(workflow_run.name,%20%5C%22%20%2F%20%5C%22),%20workflow_job.name)%20as%20%5C%22name%5C%22,%5Cn%20%20%20%20%20%20%20(unix_timestamp(t2.sync_last_update_at)%20-%20unix_timestamp(t1.sync_last_update_at))%20%2F%2060%20%5C%22run_time%20(m)%5C%22,%5Cn%20%20%20%20%20%20%20CONCAT(%5C%22https:%2F%2Fgithub.com%2Fpytorch%2Fpytorch%2Factions%2Fruns%2F%5C%22,%20workflow_run.id)%20as%20%5C%22url%5C%22%5CnFROM%5Cn%20%20(SELECT%20dense_rank()%20over(PARTITION%20BY%20BINARY%20workflow_job_node_id%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20ORDER%20BY%20sync_last_update_at)%20AS%20%5C%22rerun_num%5C%22,%5Cn%20%20%20%20%20%20%20%20%20%20action,%5Cn%20%20%20%20%20%20%20%20%20%20workflow_job_node_id,%5Cn%20%20%20%20%20%20%20%20%20%20sync_last_update_at%5Cn%20%20%20FROM%20workflow_job_event%5Cn%20%20%20WHERE%20action%20%3D%20%5C%22in_progress%5C%22%5Cn%20%20%20%20%20AND%20$__timeFilter(sync_last_update_at)%20)%20AS%20t1%5CnINNER%20JOIN%5Cn%20%20(SELECT%20dense_rank()%20over(PARTITION%20BY%20BINARY%20workflow_job_node_id%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20ORDER%20BY%20sync_last_update_at)%20AS%20%5C%22rerun_num%5C%22,%5Cn%20%20%20%20%20%20%20%20%20%20action,%5Cn%20%20%20%20%20%20%20%20%20%20workflow_job_node_id,%5Cn%20%20%20%20%20%20%20%20%20%20sync_last_update_at%5Cn%20%20%20FROM%20workflow_job_event%5Cn%20%20%20WHERE%20action%20%3D%20%5C%22completed%5C%22%5Cn%20%20%20%20%20AND%20$__timeFilter(sync_last_update_at)%20)%20AS%20t2%20ON%20t1.rerun_num%20%3D%20t2.rerun_num%5CnAND%20t1.workflow_job_node_id%20%3D%20t2.workflow_job_node_id%5CnAND%20t1.sync_last_update_at%20%3C%20t2.sync_last_update_at%5CnINNER%20JOIN%20workflow_job%20ON%20workflow_job.node_id%20%3D%20t1.workflow_job_node_id%5CnINNER%20JOIN%20workflow_run%20ON%20workflow_job.run_id%20%3D%20workflow_run.id%5CnWHERE%20workflow_job.conclusion%20%3D%20%5C%22success%5C%22%20and%20(workflow_job.name%20like%20%5C%22%25build%25%5C%22%20or%20workflow_job.name%20like%20%5C%22%25test%25%5C%22)%20and%20workflow_job.name%20!%3D%20%5C%22generate-test-matrix%5C%22%5CnORDER%20BY%20t1.sync_last_update_at%20desc%22,%22table%22:%22pull_request_review_event%22,%22timeColumnType%22:%22timestamp%22%7D%5D"
            }
          ],
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "targets": [
            {
              "format": "time_series",
              "group": [],
              "metricColumn": "none",
              "queryType": "randomWalk",
              "rawQuery": true,
              "rawSql": "SELECT $__timeGroupAlias(t1.sync_last_update_at, 30m),\n       avg((unix_timestamp(t2.sync_last_update_at) - unix_timestamp(t1.sync_last_update_at)) / 60) \"windows build (m)\"\nFROM\n  (SELECT dense_rank() over(PARTITION BY BINARY workflow_job_node_id\n                            ORDER BY sync_last_update_at) AS \"rerun_num\",\n          action,\n          workflow_job_node_id,\n          sync_last_update_at\n   FROM workflow_job_event\n   WHERE action = \"in_progress\"\n     AND $__timeFilter(sync_last_update_at) ) AS t1\nINNER JOIN\n  (SELECT dense_rank() over(PARTITION BY BINARY workflow_job_node_id\n                            ORDER BY sync_last_update_at) AS \"rerun_num\",\n          action,\n          workflow_job_node_id,\n          sync_last_update_at\n   FROM workflow_job_event\n   WHERE action = \"completed\"\n     AND $__timeFilter(sync_last_update_at) ) AS t2 ON t1.rerun_num = t2.rerun_num\nAND t1.workflow_job_node_id = t2.workflow_job_node_id\nAND t1.sync_last_update_at < t2.sync_last_update_at\nINNER JOIN workflow_job ON workflow_job.node_id = t1.workflow_job_node_id\nINNER JOIN workflow_run ON workflow_job.run_id = workflow_run.id\nWHERE workflow_job.name like \"%build%\" and workflow_run.name like \"%win%\" and workflow_job.name != \"generate-test-matrix\" and workflow_job.conclusion = \"success\"\nGROUP BY 1\nORDER BY $__timeGroup(t1.sync_last_update_at, 30m)",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "pk_id"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "table": "pull_request_review_event",
              "timeColumn": "sync_last_update_at",
              "timeColumnType": "timestamp",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            },
            {
              "format": "time_series",
              "group": [],
              "hide": false,
              "metricColumn": "none",
              "queryType": "randomWalk",
              "rawQuery": true,
              "rawSql": "SELECT $__timeGroupAlias(t1.sync_last_update_at, 30m),\n       avg((unix_timestamp(t2.sync_last_update_at) - unix_timestamp(t1.sync_last_update_at)) / 60) \"windows test (m)\"\nFROM\n  (SELECT dense_rank() over(PARTITION BY BINARY workflow_job_node_id\n                            ORDER BY sync_last_update_at) AS \"rerun_num\",\n          action,\n          workflow_job_node_id,\n          sync_last_update_at\n   FROM workflow_job_event\n   WHERE action = \"in_progress\"\n     AND $__timeFilter(sync_last_update_at) ) AS t1\nINNER JOIN\n  (SELECT dense_rank() over(PARTITION BY BINARY workflow_job_node_id\n                            ORDER BY sync_last_update_at) AS \"rerun_num\",\n          action,\n          workflow_job_node_id,\n          sync_last_update_at\n   FROM workflow_job_event\n   WHERE action = \"completed\"\n     AND $__timeFilter(sync_last_update_at) ) AS t2 ON t1.rerun_num = t2.rerun_num\nAND t1.workflow_job_node_id = t2.workflow_job_node_id\nAND t1.sync_last_update_at < t2.sync_last_update_at\nINNER JOIN workflow_job ON workflow_job.node_id = t1.workflow_job_node_id\nINNER JOIN workflow_run ON workflow_job.run_id = workflow_run.id\nWHERE workflow_job.name like \"%test%\" and workflow_run.name like \"%win%\" and workflow_job.name != \"generate-test-matrix\" and workflow_job.conclusion = \"success\"\nGROUP BY 1\nORDER BY $__timeGroup(t1.sync_last_update_at, 30m)",
              "refId": "B",
              "select": [
                [
                  {
                    "params": [
                      "pk_id"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "table": "pull_request_review_event",
              "timeColumn": "sync_last_update_at",
              "timeColumnType": "timestamp",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            },
            {
              "format": "time_series",
              "group": [],
              "hide": false,
              "metricColumn": "none",
              "queryType": "randomWalk",
              "rawQuery": true,
              "rawSql": "SELECT $__timeGroupAlias(t1.sync_last_update_at, 30m),\n       avg((unix_timestamp(t2.sync_last_update_at) - unix_timestamp(t1.sync_last_update_at)) / 60) \"linux build (m)\"\nFROM\n  (SELECT dense_rank() over(PARTITION BY BINARY workflow_job_node_id\n                            ORDER BY sync_last_update_at) AS \"rerun_num\",\n          action,\n          workflow_job_node_id,\n          sync_last_update_at\n   FROM workflow_job_event\n   WHERE action = \"in_progress\"\n     AND $__timeFilter(sync_last_update_at) ) AS t1\nINNER JOIN\n  (SELECT dense_rank() over(PARTITION BY BINARY workflow_job_node_id\n                            ORDER BY sync_last_update_at) AS \"rerun_num\",\n          action,\n          workflow_job_node_id,\n          sync_last_update_at\n   FROM workflow_job_event\n   WHERE action = \"completed\"\n     AND $__timeFilter(sync_last_update_at) ) AS t2 ON t1.rerun_num = t2.rerun_num\nAND t1.workflow_job_node_id = t2.workflow_job_node_id\nAND t1.sync_last_update_at < t2.sync_last_update_at\nINNER JOIN workflow_job ON workflow_job.node_id = t1.workflow_job_node_id\nINNER JOIN workflow_run ON workflow_job.run_id = workflow_run.id\nWHERE workflow_job.name like \"%build%\" and workflow_run.name like \"%linux%\"  and workflow_job.name != \"generate-test-matrix\" and workflow_job.conclusion = \"success\"\nGROUP BY 1\nORDER BY $__timeGroup(t1.sync_last_update_at, 30m)",
              "refId": "C",
              "select": [
                [
                  {
                    "params": [
                      "pk_id"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "table": "pull_request_review_event",
              "timeColumn": "sync_last_update_at",
              "timeColumnType": "timestamp",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            },
            {
              "format": "time_series",
              "group": [],
              "hide": false,
              "metricColumn": "none",
              "queryType": "randomWalk",
              "rawQuery": true,
              "rawSql": "SELECT $__timeGroupAlias(t1.sync_last_update_at, 30m),\n       avg((unix_timestamp(t2.sync_last_update_at) - unix_timestamp(t1.sync_last_update_at)) / 60) \"linux test (m)\"\nFROM\n  (SELECT dense_rank() over(PARTITION BY BINARY workflow_job_node_id\n                            ORDER BY sync_last_update_at) AS \"rerun_num\",\n          action,\n          workflow_job_node_id,\n          sync_last_update_at\n   FROM workflow_job_event\n   WHERE action = \"in_progress\"\n     AND $__timeFilter(sync_last_update_at) ) AS t1\nINNER JOIN\n  (SELECT dense_rank() over(PARTITION BY BINARY workflow_job_node_id\n                            ORDER BY sync_last_update_at) AS \"rerun_num\",\n          action,\n          workflow_job_node_id,\n          sync_last_update_at\n   FROM workflow_job_event\n   WHERE action = \"completed\"\n     AND $__timeFilter(sync_last_update_at) ) AS t2 ON t1.rerun_num = t2.rerun_num\nAND t1.workflow_job_node_id = t2.workflow_job_node_id\nAND t1.sync_last_update_at < t2.sync_last_update_at\nINNER JOIN workflow_job ON workflow_job.node_id = t1.workflow_job_node_id\nINNER JOIN workflow_run ON workflow_job.run_id = workflow_run.id\nWHERE workflow_job.name like \"%test%\" and workflow_run.name like \"%linux%\" and workflow_job.name != \"generate-test-matrix\" and workflow_job.conclusion = \"success\"\nGROUP BY 1\nORDER BY $__timeGroup(t1.sync_last_update_at, 30m)",
              "refId": "D",
              "select": [
                [
                  {
                    "params": [
                      "pk_id"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "table": "pull_request_review_event",
              "timeColumn": "sync_last_update_at",
              "timeColumnType": "timestamp",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "title": "Average Build/Test Run Time",
          "type": "timeseries"
        },
        {
          "datasource": "GitHub",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 24,
            "x": 0,
            "y": 16
          },
          "id": 53,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "targets": [
            {
              "format": "time_series",
              "group": [],
              "metricColumn": "none",
              "queryType": "randomWalk",
              "rawQuery": true,
              "rawSql": "select replace(\n        replace(replace(workflow_job.labels, \"]\", \"\"), \"[\", \"\"),\n        '\"',\n        \"\"\n    ) as \"instance\",\n    sum(\n        UNIX_TIMESTAMP(workflow_job.completed_at) - UNIX_TIMESTAMP(workflow_job.started_at)\n    ) / 60 as \"trunk_minutes\",\n    pr_query.total_minutes as \"pr_minutes\"\nfrom workflow_job\n    inner join push_event on workflow_job.head_sha = push_event.head_commit_id\n    inner join (\n        select workflow_job.labels as \"instance\",\n            sum(\n                UNIX_TIMESTAMP(workflow_job.completed_at) - UNIX_TIMESTAMP(workflow_job.started_at)\n            ) / 60 as \"total_minutes\"\n        from workflow_job\n            inner join push_event on workflow_job.head_sha = push_event.head_commit_id\n        where push_event.ref != \"refs/heads/master\"\n            and workflow_job.status = \"completed\"\n            and workflow_job.labels != \"[]\"\n            and $__timeFilter(workflow_job.completed_at)\n            and $__timeFilter(workflow_job.started_at)\n        group by workflow_job.labels\n    ) as pr_query on pr_query.instance = workflow_job.labels\nwhere push_event.ref = \"refs/heads/master\"\n    and workflow_job.status = \"completed\"\n    and workflow_job.labels != \"[]\"\n    and $__timeFilter(workflow_job.completed_at)\n    and $__timeFilter(workflow_job.started_at)\ngroup by workflow_job.labels",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "pk_id"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "table": "pull_request_review_event",
              "timeColumn": "sync_last_update_at",
              "timeColumnType": "timestamp",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "title": "Execution time on master vs PR for workflow jobs",
          "type": "timeseries"
        }
      ],
      "title": "CI Time to Signal Details",
      "type": "row"
    }
  ],
  "refresh": "",
  "schemaVersion": 30,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-24h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "GitHub Status",
  "uid": "L0r6ErGnk",
  "version": 1
}